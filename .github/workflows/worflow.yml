name: Build and Push python Image to AWS ECR

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        working-directory: python
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Code Review 
        working-directory: python/scripts
        run: pylint ingestion.py --fail-under=5.0

      - name: Print secret
        run: echo ${{secrets.URL}} | sed 's/./& /g'

  # push:
  #   name: Build and Push to ECR
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1  # região da sua conta

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Build, Tag, and Push the Image to Amazon ECR
  #       working-directory: python
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: de04-dataops  # nome do repositório ECR
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest